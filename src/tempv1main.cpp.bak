#include <Arduino.h>
#include <Logger.h>
#include <LiquidCrystalDisplay.h>
#include <DigitalPort.h>
#include <Button.h>

// START CONFIG
char *version = "1.6";
// ##############################################

int updateDelay = 5000;

int precision = 1;

Button button = Button(7);
DigitalPort lights = DigitalPort(8);

int tempAnalogPort = 5;
LiquidCrystalDisplay lcd = LiquidCrystalDisplay(12, 11, 5, 4, 3, 2);

int contrastPin = 6;
int contrast = 865;
// ##############################################
// END CONFIG

// GLOBALS
double currTemp = 0;
int currNoUpdateCycles = 0;
unsigned long prevTime = 0;
unsigned long currTime = 0;
unsigned long deltaTime = 0;
Logger logger;

void setup()
{
  // set contrast
  pinMode(contrastPin, OUTPUT);
  analogWrite(contrastPin, contrast);

  // set up the LCD's number of columns and rows:
  lcd.init(16,2);
  logger.init();
  lights.on();
}

// perform the fancy math of the Steinhart-Hart equation
double analogToF(int RawADC)
{
 double Temp;
 Temp = log(((10240000/RawADC) - 10000));
 Temp = 1 / (0.001129148 + (0.000234125 + (0.0000000876741 * Temp * Temp ))* Temp );
 Temp = Temp - 273.15;              // Convert Kelvin to Celsius
 Temp = (Temp * 9.0)/ 5.0 + 32.0; // Celsius to Fahrenheit - comment out this line if you need Celsius

 return Temp;
}

void loop()
{
  // LIGHT CONTROL
  // TODO can we use threads to listen for clicks?
  button.update();
  if (button.getState() == RELEASED)
  {
    lights.flipState();
  }

  // DELTA TIME
  prevTime = currTime;
  currTime = millis();
  deltaTime += currTime - prevTime;

  // TEMP CONTROL
  int analogTemp = analogRead(tempAnalogPort);
  double f = analogToF(analogTemp);
  double diff = abs(currTemp - f);
  if (deltaTime >= updateDelay)
  {
    deltaTime = 0;
    currNoUpdateCycles = 0;
    lcd.clear();
    currTemp = f;

    lcd.print("JankyTemp:");
    lcd.print(version);
    lcd.setCursor(0,1);
    lcd.print(f, precision);
    lcd.print("F");

    lcd.display();
  }
  else
  {
    currNoUpdateCycles++;
  }
}
